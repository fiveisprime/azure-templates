{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters":
	{
		"resourcesNamesSuffix":
		{
			"type": "string",
			"metadata":
			{
				"description": "Suffix of the names of the resources."
			}
		},
		"resourcesLocation":
		{
			"type": "string",
			"defaultValue": "westeurope",
			"metadata":
			{
				"description": "Location of the resources."
			}
		},
		"appGatewaySKUName":
		{
			"type": "string",
			"defaultValue": "Standard_Small",
			"allowedValues":
			[
				"Standard_Small",
				"Standard_Medium",
				"Standard_Large",
				"WAF_Medium",
				"WAF_Large"
			],
			"metadata":
			{
				"description": "Specifies the tier of application gateway."
			}
		},
		"appGatewaySKUCapacity":
		{
			"type": "int",
			"defaultValue": 1,
			"minValue": 1,
			"maxValue": 10,
			"metadata":
			{
				"description": "Specifies the number of virtual machines in application gateway."
			}
		},
		"computeSKUName":
		{
			"type": "string",
			"defaultValue": "Standard_D1_v2",
			"allowedValues":
			[
				"Standard_D1_v2"
			],
			"metadata":
			{
				"description": "Specifies the tier of virtual machines in a scale set."
			}
		},
		"computeSKUCapacity":
		{
			"type": "int",
			"defaultValue": 1,
			"minValue": 1,
			"maxValue": 100,
			"metadata":
			{
				"description": "Specifies the number of virtual machines in the scale set."
			}
		},
		"computeAdminUsername":
		{
			"type": "string",
			"minLength": 1
		},
		"computeAdminPassword":
		{
			"type": "securestring"
		},
		"fabricReliabilityLevel":
		{
			"type": "string",
			"defaultValue": "None",
			"allowedValues":
			[
				"None",
				"Bronze",
				"Silver",
				"Gold",
				"Platinum"
			],
			"metadata":
			{
				"description": "Cluster reliability level indicates replica set size of system service."
			}
		},
		"certificateKeyVaultId":
		{
			"type": "string",
			"metadata":
			{
				"description": "Identifier of the Key Vault resource which stores the sertificates."
			}
		},
		"serverCertificateThumbprint":
		{
			"type": "string",
			"metadata":
			{
				"description": "Thumbprint of the managemnet certificate."
			}
		},
		"serverCertificateSecretUrl":
		{
			"type": "string",
			"metadata":
			{
				"description": "Thumbprint of the managemnet certificate."
			}
		},
		"AADTenantId":
		{
			"type": "string",
			"minLength": 36,
			"maxLength": 36,
			"metadata":
			{
				"description": "Identifier of the Azure Active Directory tenant."
			}
		},
		"fabricManageWebAppId":
		{
			"type": "string",
			"minLength": 36,
			"maxLength": 36,
			"metadata":
			{
				"description": "Identifier of the Fabric Management Wed Application within the Azure Active Directory tenant."
			}
		},
		"fabricManageNativeAppId":
		{
			"type": "string",
			"minLength": 36,
			"maxLength": 36,
			"metadata":
			{
				"description": "Identifier of the Fabric Management Native Application within the Azure Active Directory tenant."
			}
		}
	},
	"variables":
	{
		"Names":
		{
			"Network": "[parameters('resourcesNamesSuffix')]",
			"Tier4BalancerSubnet": "Tier4BalancerSubnet",
			"Tier4BalancerPublicIP": "[concat(parameters('resourcesNamesSuffix'), '-t4lb')]",
			"Tier4Balancer": "[parameters('resourcesNamesSuffix')]",
			"Tier7BalancerSubnet": "Tier7BalancerSubnet",
			"Tier7BalancerPublicIP": "[concat(parameters('resourcesNamesSuffix'), '-t7lb')]",
			"Tier7Balancer": "[parameters('resourcesNamesSuffix')]",
			"FabricSubnet": "FabricSubnet",
			"FabricDiagStorage": "[concat(replace(parameters('resourcesNamesSuffix'), '-', ''), 'diag')]",
			"FabricScaleSet": "[parameters('resourcesNamesSuffix')]",
			"Fabric": "[parameters('resourcesNamesSuffix')]"
		},
		"KeyVault":
		{
			"ResourceId": "[parameters('certificateKeyVaultId')]"
		},
		"Network":
		{
			"ResourceName": "[variables('Names').Network]",
			"ResourceId": "[resourceId('Microsoft.Network/virtualNetworks', variables('Names').Network)]",
			"ResourceLocation": "[parameters('resourcesLocation')]",
			"AddressPrefix": "10.0.0.0/24"
		},
		"Tier4BalancerSubnet":
		{
			"ResourceName": "[variables('Names').Tier4BalancerSubnet]",
			"ResourceId": "[concat(variables('Network').ResourceId, '/subnets/', variables('Names').Tier4BalancerSubnet)]",
			"ResourceLocation": "[parameters('resourcesLocation')]",
			"AddressPrefix": "10.0.0.128/27"
		},
		"Tier4BalancerPublicIP":
		{
			"ResourceName": "[variables('Names').Tier4BalancerPublicIP]",
			"ResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('Names').Tier4BalancerPublicIP)]",
			"ResourceLocation": "[parameters('resourcesLocation')]",
			"DomainName": "[variables('Names').Tier4BalancerPublicIP]"
		},
		"Tier4Balancer":
		{
			"ResourceName": "[variables('Names').Tier4Balancer]",
			"ResourceId": "[resourceId('Microsoft.Network/loadBalancers', variables('Names').Tier4Balancer)]",
			"ResourceLocation": "[parameters('resourcesLocation')]",
			"FabricFrontendIPConfigurationName": "Fabric",
			"FabricFrontendIPConfigurationId": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('Names').Tier4Balancer), '/frontendIPConfigurations/Fabric')]",
			"FabricBackendAddressPoolName": "Fabric",
			"FabricBackendAddressPoolId": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('Names').Tier4Balancer), '/backendAddressPools/Fabric')]",
			"FabricInboundNatPoolName": "Fabric",
			"FabricInboundNatPoolId": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('Names').Tier4Balancer), '/inboundNatPools/Fabric')]"
		},
		"Tier7BalancerSubnet":
		{
			"ResourceName": "[variables('Names').Tier7BalancerSubnet]",
			"ResourceId": "[concat(variables('Network').ResourceId, '/subnets/', variables('Names').Tier7BalancerSubnet)]",
			"ResourceLocation": "[parameters('resourcesLocation')]",
			"AddressPrefix": "10.0.0.160/27"
		},
		"Tier7BalancerPublicIP":
		{
			"ResourceName": "[variables('Names').Tier7BalancerPublicIP]",
			"ResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('Names').Tier7BalancerPublicIP)]",
			"ResourceLocation": "[parameters('resourcesLocation')]",
			"DomainName": "[variables('Names').Tier7BalancerPublicIP]"
		},
		"Tier7Balancer":
		{
			"ResourceName": "[variables('Names').Tier7Balancer]",
			"ResourceId": "[resourceId('Microsoft.Network/applicationGateways', variables('Names').Tier7Balancer)]",
			"ResourceLocation": "[parameters('resourcesLocation')]",
			"SKUName": "[parameters('appGatewaySKUName')]",
			"SKUCapacity": "[parameters('appGatewaySKUCapacity')]",
			"PrimaryBackendAddressPoolName": "appGatewayBackendPool",
			"FabricBackendAddressPoolId": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('Names').Tier7Balancer), '/backendAddressPools/', 'appGatewayBackendPool')]"
		},
		"FabricSubnet":
		{
			"ResourceName": "[variables('Names').FabricSubnet]",
			"ResourceId": "[concat(variables('Network').ResourceId, '/subnets/', variables('Names').FabricSubnet)]",
			"ResourceLocation": "[parameters('resourcesLocation')]",
			"AddressPrefix": "10.0.0.0/26"
		},
		"FabricDiagStorage":
		{
			"ResourceName": "[variables('Names').FabricDiagStorage]",
			"ResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('Names').FabricDiagStorage)]",
			"ResourceLocation": "[parameters('resourcesLocation')]"
		},
		"FabricScaleSet":
		{
			"ResourceName": "[variables('Names').FabricScaleSet]",
			"ResourceId": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('Names').FabricScaleSet)]",
			"ResourceLocation": "[parameters('resourcesLocation')]",
			"SKUName": "[parameters('computeSKUName')]",
			"SKUCapacity": "[parameters('computeSKUCapacity')]",
			"ComputerNamePrefix": "master",
			"AdminUsername": "[parameters('computeAdminUsername')]",
			"AdminPassword": "[parameters('computeAdminPassword')]",
			"ImageSku": "2016-Datacenter-with-Containers",
			"ManagedDiskStorageAccountType": "Standard_LRS"
		},
		"Fabric":
		{
			"ResourceName": "[variables('Names').Fabric]",
			"ResourceId": "[resourceId('Microsoft.ServiceFabric/clusters', variables('Names').Fabric)]",
			"ResourceLocation": "[parameters('resourcesLocation')]",
			"ClusterName": "[variables('Names').Fabric]",
			"ReliabilityLevel": "[parameters('fabricReliabilityLevel')]",
			"CertificateStore": "My",
			"ServerCertificate": "[parameters('serverCertificateThumbprint')]",
			"TcpManagementPort": 19000,
			"HttpManagementPort": 19080,
			"ReverseProxyPort": 19081,
			"AADTenantId": "[parameters('AADTenantId')]",
			"fabricManageWebAppId": "[parameters('fabricManageWebAppId')]",
			"fabricManageNativeAppId": "[parameters('fabricManageNativeAppId')]"
		}
	},
	"resources":
	[
		{
			"comments": "Virtual network.",
			"name": "[variables('Network').ResourceName]",
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2017-10-01",
			"location": "[variables('Network').ResourceLocation]",
			"tags":
			{
				"displayName": "Network",
				"resourceType": "Service Fabric",
				"clusterName": "[variables('Fabric').ClusterName]"
			},
			"properties":
			{
				"addressSpace":
				{
					"addressPrefixes":
					[
						"[variables('Network').AddressPrefix]"
					]
				},
				"subnets":
				[
					{
						"name": "[variables('Tier4BalancerSubnet').ResourceName]",
						"properties":
						{
							"addressPrefix": "[variables('Tier4BalancerSubnet').AddressPrefix]"
						}
					},
					{
						"name": "[variables('Tier7BalancerSubnet').ResourceName]",
						"properties":
						{
							"addressPrefix": "[variables('Tier7BalancerSubnet').AddressPrefix]"
						}
					},
					{
						"name": "[variables('FabricSubnet').ResourceName]",
						"properties":
						{
							"addressPrefix": "[variables('FabricSubnet').AddressPrefix]",
							"serviceEndpoints":
							[
								{
									"service": "Microsoft.Storage"
								}
							]
						}
					}
				]
			}
		},
		{
			"comments": "Public IP address for the Tier 4 Load Balancer.",
			"name": "[variables('Tier4BalancerPublicIP').ResourceName]",
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2017-10-01",
			"location": "[variables('Tier4BalancerPublicIP').ResourceLocation]",
			"tags":
			{
				"displayName": "Tier4BalancerPublicIP",
				"resourceType": "Service Fabric",
				"clusterName": "[variables('Fabric').ClusterName]"
			},
			"properties":
			{
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings":
				{
					"domainNameLabel": "[variables('Tier4BalancerPublicIP').DomainName]"
				}
			}
		},
		{
			"comments": "Tier 4 Load Balancer of the Virtual Machine Scale Set.",
			"name": "[variables('Tier4Balancer').ResourceName]",
			"type": "Microsoft.Network/loadBalancers",
			"apiVersion": "2017-10-01",
			"location": "[variables('Tier4Balancer').ResourceLocation]",
			"tags":
			{
				"displayName": "Tier4Balancer",
				"resourceType": "Service Fabric",
				"clusterName": "[variables('Fabric').ClusterName]"
			},
			"properties":
			{

				"frontendIPConfigurations":
				[
					{
						"name": "[variables('Tier4Balancer').FabricFrontendIPConfigurationName]",
						"properties":
						{
							"publicIPAddress":
							{
								"id": "[variables('Tier4BalancerPublicIP').ResourceId]"
							}
						}
					}
				],
				"backendAddressPools":
				[
					{
						"name": "[variables('Tier4Balancer').FabricBackendAddressPoolName]"
					}
				],
				"loadBalancingRules":
				[
					{
						"name": "FabricManagementTcp",
						"properties":
						{
							"frontendIPConfiguration":
							{
								"id": "[variables('Tier4Balancer').FabricFrontendIPConfigurationId]"
							},
							"backendAddressPool":
							{
								"id": "[variables('Tier4Balancer').FabricBackendAddressPoolId]"
							},
							"probe":
							{
								"id": "[concat(variables('Tier4Balancer').ResourceId, '/probes/FabricManagementTcp')]"
							},
							"protocol": "Tcp",
							"frontendPort": "[variables('Fabric').TcpManagementPort]",
							"backendPort": "[variables('Fabric').TcpManagementPort]"
						}
					},
					{
						"name": "FabricManagementHttp",
						"properties":
						{
							"frontendIPConfiguration":
							{
								"id": "[variables('Tier4Balancer').FabricFrontendIPConfigurationId]"
							},
							"backendAddressPool":
							{
								"id": "[variables('Tier4Balancer').FabricBackendAddressPoolId]"
							},
							"probe":
							{
								"id": "[concat(variables('Tier4Balancer').ResourceId, '/probes/FabricManagementHttp')]"
							},
							"protocol": "Tcp",
							"frontendPort": "[variables('Fabric').HttpManagementPort]",
							"backendPort": "[variables('Fabric').HttpManagementPort]"
						}
					}
				],
				"probes":
				[
					{
						"name": "FabricManagementTcp",
						"properties":
						{
							"protocol": "Tcp",
							"port": "[variables('Fabric').TcpManagementPort]"
						}
					},
					{
						"name": "FabricManagementHttp",
						"properties":
						{
							"protocol": "Tcp",
							"port": "[variables('Fabric').HttpManagementPort]"
						}
					}
				],
				"inboundNatRules":
				[
				],
				"outboundNatRules":
				[
				],
				"inboundNatPools":
				[
					{
						"name": "[variables('Tier4Balancer').FabricInboundNatPoolName]",
						"properties":
						{
							"frontendIPConfiguration":
							{
								"id": "[variables('Tier4Balancer').FabricFrontendIPConfigurationId]"
							},
							"protocol": "Tcp",
							"frontendPortRangeStart": 3389,
							"frontendPortRangeEnd": 4500,
							"backendPort": 3389
						}
					}
				]
			},
			"dependsOn":
			[
				"[variables('Network').ResourceId]",
				"[variables('Tier4BalancerPublicIP').ResourceId]"
			]
		},
		{
			"comments": "Public IP address for the Tier 7 Load Balancer.",
			"name": "[variables('Tier7BalancerPublicIP').ResourceName]",
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2017-10-01",
			"location": "[variables('Tier7BalancerPublicIP').ResourceLocation]",
			"tags":
			{
				"displayName": "Tier7BalancerPublicIP",
				"resourceType": "Service Fabric",
				"clusterName": "[variables('Fabric').ClusterName]"
			},
			"properties":
			{
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings":
				{
					"domainNameLabel": "[variables('Tier7BalancerPublicIP').DomainName]"
				}
			}
		},
		{
			"comments": "Tier 7 Load balancer for the Service Fabric cluster.",
			"name": "[variables('Tier7Balancer').ResourceName]",
			"type": "Microsoft.Network/applicationGateways",
			"apiVersion": "2017-10-01",
			"location": "[variables('Tier7Balancer').ResourceLocation]",
			"tags":
			{
				"displayName": "Tier7Balancer",
				"resourceType": "Service Fabric",
				"clusterName": "[variables('Fabric').ClusterName]"
			},
			"properties":
			{
				"sku":
				{
					"name": "[variables('Tier7Balancer').SKUName]",
					"capacity": "[variables('Tier7Balancer').SKUCapacity]"
				},
				"gatewayIPConfigurations":
				[
					{
						"name": "appGatewayIpConfig",
						"properties":
						{
							"subnet":
							{
								"id": "[variables('Tier7BalancerSubnet').ResourceId]"
							}
						}
					}
				],
				"frontendIPConfigurations":
				[
					{
						"name": "appGatewayFrontendIP",
						"properties":
						{
							"PublicIPAddress":
							{
								"id": "[variables('Tier7BalancerPublicIP').ResourceId]"
							}
						}
					}
				],
				"frontendPorts":
				[
					{
						"name": "appGatewayFrontendPort",
						"properties":
						{
							"Port": 80
						}
					}
				],
				"backendAddressPools":
				[
					{
						"name": "[variables('Tier7Balancer').PrimaryBackendAddressPoolName]"
					}
				],
				"backendHttpSettingsCollection":
				[
					{
						"name": "appGatewayBackendHttpSettings",
						"properties":
						{
							"Port": 80,
							"Protocol": "Http",
							"CookieBasedAffinity": "Disabled"
						}
					}
				],
				"httpListeners":
				[
					{
						"name": "appGatewayHttpListener",
						"properties":
						{
							"FrontendIPConfiguration":
							{
								"Id": "[concat(variables('Tier7Balancer').ResourceId, '/frontendIPConfigurations/appGatewayFrontendIP')]"
							},
							"FrontendPort":
							{
								"Id": "[concat(variables('Tier7Balancer').ResourceId, '/frontendPorts/appGatewayFrontendPort')]"
							},
							"Protocol": "Http",
							"SslCertificate": null
						}
					}
				],
				"requestRoutingRules":
				[
					{
						"Name": "rule1",
						"properties":
						{
							"RuleType": "Basic",
							"httpListener":
							{
								"id": "[concat(variables('Tier7Balancer').ResourceId, '/httpListeners/appGatewayHttpListener')]"
							},
							"backendAddressPool":
							{
								"id": "[variables('Tier7Balancer').FabricBackendAddressPoolId]"
							},
							"backendHttpSettings":
							{
								"id": "[concat(variables('Tier7Balancer').ResourceId, '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
							}
						}
					}
				]
			},
			"dependsOn":
			[
				"[variables('Network').ResourceId]",
				"[variables('Tier7BalancerPublicIP').ResourceId]"
			]
		},
		{
			"comments": "Storage for diagnostics data.",
			"name": "[variables('FabricDiagStorage').ResourceName]",
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2017-10-01",
			"location": "[variables('FabricDiagStorage').ResourceLocation]",
			"tags":
			{
				"displayName": "FabricDiagStorage",
				"resourceType": "Service Fabric",
				"clusterName": "[variables('Fabric').ClusterName]"
			},
			"sku":
			{
				"name": "Standard_LRS"
			},
			"kind": "Storage",
			"properties":
			{
				"networkAcls":
				{
					"bypass": "AzureServices",
					"virtualNetworkRules":
					[
						{
							"id": "[variables('FabricSubnet').ResourceId]"
						}
					],
					"defaultAction": "Deny"
				}
			},
			"dependsOn":
			[
				"[variables('Network').ResourceId]"
			]
		},
		{
			"comments": "Virtual Machine Scale Set for Service Fabric cluster.",
			"name": "[variables('FabricScaleSet').ResourceName]",
			"type": "Microsoft.Compute/virtualMachineScaleSets",
			"apiVersion": "2017-12-01",
			"location": "[variables('FabricScaleSet').ResourceLocation]",
			"tags":
			{
				"displayName": "FabricScaleSet",
				"resourceType": "Service Fabric",
				"clusterName": "[variables('Fabric').ClusterName]"
			},
			"sku":
			{
				"name": "[variables('FabricScaleSet').SKUName]",
				"capacity": "[variables('FabricScaleSet').SKUCapacity]"
			},
			"properties":
			{
				"upgradePolicy":
				{
					"mode": "Automatic"
				},
				"virtualMachineProfile":
				{
					"osProfile":
					{
						"computerNamePrefix": "[variables('FabricScaleSet').ComputerNamePrefix]",
						"adminUsername": "[variables('FabricScaleSet').AdminUsername]",
						"adminPassword": "[variables('FabricScaleSet').AdminPassword]",
						"secrets":
						[
							{
								"sourceVault":
								{
									"id": "[variables('KeyVault').ResourceId]"
								},
								"vaultCertificates":
								[
									{
										"certificateUrl": "[parameters('serverCertificateSecretUrl')]",
										"certificateStore": "[variables('Fabric').CertificateStore]"
									}
								]
							}
						]
					},
					"storageProfile":
					{
						"imageReference":
						{
							"publisher": "MicrosoftWindowsServer",
							"offer": "WindowsServer",
							"sku": "[variables('FabricScaleSet').ImageSku]",
							"version": "latest"
						},
						"osDisk":
						{
							"caching": "ReadWrite",
							"createOption": "FromImage",
							"managedDisk":
							{
								"storageAccountType": "[variables('FabricScaleSet').ManagedDiskStorageAccountType]"
							}
						}
					},
					"networkProfile":
					{
						"networkInterfaceConfigurations":
						[
							{
								"name": "NIC-0",
								"properties":
								{
									"primary": true,
									"ipConfigurations":
									[
										{
											"name": "NIC-0-config",
											"properties":
											{
												"subnet":
												{
													"id": "[variables('FabricSubnet').ResourceId]"
												},
												"applicationGatewayBackendAddressPools":
												[
													{
														"id": "[variables('Tier7Balancer').FabricBackendAddressPoolId]"
													}
												],
												"loadBalancerBackendAddressPools":
												[
													{
														"id": "[variables('Tier4Balancer').FabricBackendAddressPoolId]"
													}
												],
												"loadBalancerInboundNatPools":
												[
													{
														"id": "[variables('Tier4Balancer').FabricInboundNatPoolId]"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"extensionProfile":
					{
						"extensions":
						[
							{
								"name": "master_ServiceFabricNode",
								"properties":
								{
									"publisher": "Microsoft.Azure.ServiceFabric",
									"type": "ServiceFabricNode",
									"typeHandlerVersion": "1.0",
									"autoUpgradeMinorVersion": true,
									"settings":
									{
										"clusterEndpoint": "[reference(variables('Fabric').ResourceId).clusterEndpoint]",
										"nodeTypeRef": "master",
										"dataPath": "D:\\\\SvcFab",
										"durabilityLevel": "Bronze",
										"enableParallelJobs": true,
										"nicPrefixOverride": "[variables('FabricSubnet').AddressPrefix]",
										"certificate":
										{
											"thumbprint": "[variables('Fabric').ServerCertificate]",
											"x509StoreName": "[variables('Fabric').CertificateStore]"
										}
									},
									"protectedSettings":
									{
										"StorageAccountKey1": "[listKeys(variables('FabricDiagStorage').ResourceId, '2017-10-01').keys[0].value]",
										"StorageAccountKey2": "[listKeys(variables('FabricDiagStorage').ResourceId, '2017-10-01').keys[1].value]"
									}
								}
							}
						]
					}
				}
			},
			"dependsOn":
			[
				"[variables('Tier4Balancer').ResourceId]",
				"[variables('Tier7Balancer').ResourceId]",
				"[variables('FabricDiagStorage').ResourceId]"
			]
		},
		{
			"comments": "Service Fabric cluster.",
			"apiVersion": "2016-09-01",
			"name": "[variables('Fabric').ResourceName]",
			"type": "Microsoft.ServiceFabric/clusters",
			"location": "[variables('Fabric').ResourceLocation]",
			"tags":
			{
				"displayName": "Fabric",
				"resourceType": "Service Fabric",
				"clusterName": "[variables('Fabric').ClusterName]"
			},
			"properties":
			{
				"certificate":
				{
					"thumbprint": "[variables('Fabric').ServerCertificate]",
					"x509StoreName": "[variables('Fabric').CertificateStore]"
				},
				"reliabilityLevel": "[variables('Fabric').ReliabilityLevel]",
				"upgradeMode": "Automatic",
				"clientCertificateThumbprints":
				[
				],
				"clientCertificateCommonNames":
				[
				],
				"fabricSettings":
				[
					{
						"name": "Security",
						"parameters":
						[
							{
								"name": "ClusterProtectionLevel",
								"value": "EncryptAndSign"
							}
						]
					}
				],
				"reverseProxyCertificate":
				{
					"thumbprint": "[variables('Fabric').ServerCertificate]",
					"x509StoreName": "[variables('Fabric').CertificateStore]"
				},
				"managementEndpoint": "[concat('https://', reference(variables('Tier4BalancerPublicIP').ResourceId).dnsSettings.fqdn, ':', variables('Fabric').HttpManagementPort)]",
				"diagnosticsStorageAccountConfig":
				{
					"storageAccountName": "[variables('FabricDiagStorage').ResourceName]",
					"protectedAccountKeyName": "StorageAccountKey1",
					"blobEndpoint": "[reference(variables('FabricDiagStorage').ResourceId, '2017-10-01').primaryEndpoints.blob]",
					"queueEndpoint": "[reference(variables('FabricDiagStorage').ResourceId, '2017-10-01').primaryEndpoints.queue]",
					"tableEndpoint": "[reference(variables('FabricDiagStorage').ResourceId, '2017-10-01').primaryEndpoints.table]"
				},
				"nodeTypes":
				[
					{
						"name": "master",
						"clientConnectionEndpointPort": "[variables('Fabric').TcpManagementPort]",
						"httpGatewayEndpointPort": "[variables('Fabric').HttpManagementPort]",
						"applicationPorts":
						{
							"startPort": 20000,
							"endPort": 30000
						},
						"ephemeralPorts":
						{
							"startPort": 49152,
							"endPort": 65534
						},
						"isPrimary": true,
						"vmInstanceCount": "[variables('FabricScaleSet').SKUCapacity]",
						"reverseProxyEndpointPort": "[variables('Fabric').ReverseProxyPort]"
					}
				],
				"azureActiveDirectory":
				{
					"tenantId": "[variables('Fabric').AADTenantId]",
					"clusterApplication": "[variables('Fabric').fabricManageWebAppId]",
					"clientApplication": "[variables('Fabric').fabricManageNativeAppId]"
				}
			},
			"dependsOn":
			[
				"[variables('Tier4BalancerPublicIP').ResourceId]",
				"[variables('FabricDiagStorage').ResourceId]"
			]
		}
	],
	"outputs":
	{
		"Network.ResourceId":
		{
			"type": "string",
			"value": "[variables('Network').ResourceId]"
		}
	}
}